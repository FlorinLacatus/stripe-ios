format_version: "11"
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git
project_type: ios
app:
  envs:
  - FASTLANE_XCODE_LIST_TIMEOUT: "120"
  - DEFAULT_TEST_DEVICE: platform=iOS Simulator,name=iPhone 15,OS=17.4
  - BITRISE_PROJECT_PATH: Stripe.xcworkspace
  - GIT_AUTHOR_NAME: Bitrise CI
  - GIT_AUTHOR_EMAIL: mobile-sdk-team@stripe.com
  - GIT_COMMITTER_NAME: Bitrise CI
  - GIT_COMMITTER_EMAIL: mobile-sdk-team@stripe.com
  - FASTLANE_WORK_DIR: .
    opts:
      is_expand: false
  - FASTLANE_LANE: ios integration_all
    opts:
      is_expand: false
meta:
  bitrise.io:
    machine_type_id: g2-m1.8core
    stack: osx-xcode-15.3.x
trigger_map:
- pipeline: main-trigger-pipeline
  push_branch: master
- pipeline: releases-trigger-pipeline
  pull_request_source_branch: releases/*
- pipeline: main-trigger-pipeline
  pull_request_source_branch: '*'
pipelines:
  main-trigger-pipeline:
    stages:
    - stage-main-begin: {}
    - stage-main-tests: {}
  nightly-pipeline:
    stages:
    - stage-nightly-all: {}
  releases-trigger-pipeline:
    stages:
    - stage-releases-run-all: {}
stages:
  stage-main-begin:
    workflows:
    - build-for-testing: {}
  stage-main-tests:
    workflows:
    - ui-tests-1: {}
    - ui-tests-2: {}
    - ui-tests-3: {}
    - ui-tests-4: {}
    - framework-tests-1: {}
    - framework-tests-2: {}
    - install-tests-cocoapods: {}
    - install-tests-spm: {}
    - extra-builds: {}
    - integration-all: {}
    - deploy-dry-run: {}
    - lokalise-upload: {}
  stage-nightly-all:
    workflows:
    - basic-integration-tests: {}
    - check-docs: {}
    - legacy-tests-15: {}
    - legacy-tests-16: {}
    - carthage-install-test: {}
    - data-theorem-sast: {}
    - deploy-dry-run: {}
    - pod-lint-tests: {}
  stage-releases-run-all:
    workflows:
    - framework-tests-1: {}
    - framework-tests-2: {}
    - deploy-docs: {}
    - install-tests-cocoapods: {}
    - install-tests-spm: {}
    - extra-builds: {}
    - basic-integration-tests: {}
    - ui-tests-1: {}
    - ui-tests-2: {}
    - ui-tests-3: {}
    - ui-tests-4: {}
    - legacy-tests-15: {}
    - legacy-tests-16: {}
    - carthage-install-test: {}
    - pod-lint-tests: {}
    - integration-all: {}
workflows:
  basic-integration-tests:
    before_run:
    - prep_all
    after_run:
    - notify_ci
    steps:
    - xcode-test@5.1:
        inputs:
        - destination: $DEFAULT_TEST_DEVICE
        - test_repetition_mode: retry_on_failure
        - maximum_test_repetitions: "2"
        - scheme: Basic Integration
    - deploy-to-bitrise-io@2: {}
  build-for-testing:
    before_run:
    - prep_build_only
    steps:
    - script@1:
        title: Run swiftlint
        inputs:
        - content: ./ci_scripts/lint_modified_files.sh
    - script@1:
        title: Check PaymentSheet test sharding
        inputs:
        - content: ./ci_scripts/check_paymentsheet_test_sharding.rb
    - xcode-build-for-test@3:
        inputs:
        - scheme: PaymentSheet Example
        - xcodebuild_options: EXCLUDED_ARCHS=x86_64
        - destination: generic/platform=iOS Simulator
    - xcode-build-for-test@3:
        inputs:
        - scheme: StripeiOS
        - xcodebuild_options: EXCLUDED_ARCHS=x86_64
        - destination: generic/platform=iOS Simulator
    - xcode-build-for-test@3:
        inputs:
        - scheme: StripePayments
        - xcodebuild_options: EXCLUDED_ARCHS=x86_64
        - destination: generic/platform=iOS Simulator
    - xcode-build-for-test@3:
        inputs:
        - scheme: StripePaymentsUI
        - xcodebuild_options: EXCLUDED_ARCHS=x86_64
        - destination: generic/platform=iOS Simulator
    - deploy-to-bitrise-io@2:
        inputs:
        - pipeline_intermediate_files: $BITRISE_TEST_BUNDLE_PATH:BITRISE_TEST_BUNDLE_PATH
    - share-pipeline-variable@1:
        inputs:
        - variables: BITRISE_XCTESTRUN_FILE_PATH
  carthage-install-test:
    before_run:
    - prep_all
    after_run:
    - notify_ci
    steps:
    - fastlane@3:
        title: fastlane installation_carthage
        inputs:
        - lane: installation_carthage
  check-docs:
    before_run:
    - prep_all
    after_run:
    - notify_ci
    steps:
    - script@1:
        title: Build documentation
        inputs:
        - content: bundle exec ./ci_scripts/build_documentation.rb
  data-theorem-sast:
    after_run:
    - notify_ci
    steps:
    - script@1:
        title: Set Bundler to use local vendor directory
        is_always_run: true
        inputs:
        - content: bundle config set path 'vendor/bundle'
    - script@1:
        title: Set bundler to ignore development and test gems
        inputs:
        - content: bundle config set without 'development'
    - git-clone@8.2: {}
    - cache-pull@2: {}
    - bundler@0: {}
    - cache-push@2:
        inputs:
        - compress_archive: "true"
        - cache_paths: |
            vendor
            SourcePackages
    - script@1:
        title: Submit app to Data Theorem for SAST
        inputs:
        - content: bundle exec ./ci_scripts/push_dt.rb "$BITRISE_GIT_BRANCH" "$DT_UPLOAD_API_KEY"
  deploy-docs:
    steps:
    - activate-ssh-key@4: {}
    - script@1:
        title: Set Bundler to use local vendor directory
        is_always_run: true
        inputs:
        - content: bundle config set path 'vendor/bundle'
    - git-clone@8.2:
        inputs:
        - merge_pr: "no"
        - fetch_tags: "yes"
    - cache-pull@2: {}
    - bundler@0: {}
    - cache-push@2:
        inputs:
        - compress_archive: "true"
        - cache_paths: |
            vendor
            SourcePackages
    - script@1:
        title: Fetch full branch history
        inputs:
        - content: git fetch origin
    - script@1:
        title: Build documentation
        inputs:
        - content: bundle exec ./ci_scripts/build_documentation.rb --publish
  deploy-dry-run:
    before_run:
    - prep_all
    after_run:
    - notify_ci
    steps:
    - script@1:
        title: Install Sourcekitten
        is_always_run: true
        inputs:
        - content: brew install sourcekitten
    - script@1:
        title: Create release
        is_always_run: true
        inputs:
        - content: bundle exec ./ci_scripts/create_release.rb --version 99.99.99 --dry-run
    - script@1:
        title: Deploy release
        is_always_run: true
        inputs:
        - content: bundle exec ./ci_scripts/deploy_release.rb --dry-run
    meta:
      bitrise.io:
        machine_type_id: g2-m1.8core
        stack: osx-xcode-15.0.x
  financial-connections-stability-tests:
    before_run:
    - prep_all
    steps:
    - xcode-test@5.1:
        inputs:
        - destination: $DEFAULT_TEST_DEVICE
        - test_repetition_mode: retry_on_failure
        - maximum_test_repetitions: "2"
        - scheme: FinancialConnections Example
    - pagerduty@0:
        is_always_run: true
        run_if: .IsBuildFailed
        inputs:
        - event_description: iOS E2E tests failing! $BITRISE_BUILD_URL.
        - integration_key: $AUX_PAGERDUTY_INTEGRATION_KEY
    - slack@3:
        is_always_run: true
        run_if: .IsBuildFailed
        inputs:
        - webhook_url: $SLACK_KGAIDIS_TESTING_WEBHOOK_URL
        - webhook_url_on_error: $SLACK_KGAIDIS_TESTING_WEBHOOK_URL
    - deploy-to-bitrise-io@2: {}
  financial-connections-stability-tests-for-edge:
    before_run:
    - prep_all
    steps:
    - xcode-test@5.1:
        inputs:
        - destination: $DEFAULT_TEST_DEVICE
        - test_repetition_mode: retry_on_failure
        - maximum_test_repetitions: "2"
        - scheme: FinancialConnections Example
    - deploy-to-bitrise-io@2: {}
  framework-tests-1:
    steps:
    - pull-intermediate-files@1:
        inputs:
        - artifact_sources: stage-main-begin.build-for-testing
    - xcode-test-without-building@0:
        is_always_run: true
        inputs:
        - destination: $DEFAULT_TEST_DEVICE
        - test_repetition_mode: retry_on_failure
        - maximum_test_repetitions: "2"
        - scheme: StripeiOS
        - log_formatter: xcbeautify
        - xcodebuild_options: -maximum-concurrent-test-simulator-destinations 2 -maximum-parallel-testing-workers 2 -parallel-testing-worker-count 2
        - xctestrun: $BITRISE_TEST_BUNDLE_PATH/StripeiOS_StripeiOS_iphonesimulator17.4-arm64.xctestrun
    - deploy-to-bitrise-io@2: {}    
#   framework-tests-1:
#     before_run:
#     - prep_all
#     steps:
#     - fastlane@3:
#         title: fastlane preflight
#         inputs:
#         - lane: preflight
#     - fastlane@3:
#         title: fastlane threeds2_tests
#         inputs:
#         - lane: threeds2_tests
#     - xcode-test@5.1:
#         inputs:
#         - destination: $DEFAULT_TEST_DEVICE
#         - test_repetition_mode: retry_on_failure
#         - maximum_test_repetitions: "2"
#         - scheme: StripeiOS
#     - xcode-test@5.1:
#         inputs:
#         - destination: $DEFAULT_TEST_DEVICE
#         - test_repetition_mode: retry_on_failure
#         - maximum_test_repetitions: "2"
#         - scheme: StripePayments
#     - xcode-test@5.1:
#         inputs:
#         - destination: $DEFAULT_TEST_DEVICE
#         - test_repetition_mode: retry_on_failure
#         - maximum_test_repetitions: "2"
#         - scheme: StripePaymentsUI
#     - deploy-to-bitrise-io@2: {}
#     - save-spm-cache@1: {}
  framework-tests-2:
    before_run:
    - prep_all
    steps:
    - xcode-test@5.1:
        inputs:
        - destination: $DEFAULT_TEST_DEVICE
        - test_repetition_mode: retry_on_failure
        - maximum_test_repetitions: "2"
        - scheme: StripePaymentSheet
    - xcode-test@5.1:
        inputs:
        - destination: $DEFAULT_TEST_DEVICE
        - test_repetition_mode: retry_on_failure
        - maximum_test_repetitions: "2"
        - scheme: StripeCameraCore
    - xcode-test@5.1:
        inputs:
        - destination: $DEFAULT_TEST_DEVICE
        - test_repetition_mode: retry_on_failure
        - maximum_test_repetitions: "2"
        - scheme: StripeCore
    - xcode-test@5.1:
        inputs:
        - destination: $DEFAULT_TEST_DEVICE
        - test_repetition_mode: retry_on_failure
        - maximum_test_repetitions: "2"
        - scheme: StripeIdentity
    - xcode-test@5.1:
        inputs:
        - destination: $DEFAULT_TEST_DEVICE
        - test_repetition_mode: retry_on_failure
        - maximum_test_repetitions: "2"
        - scheme: StripeFinancialConnections
    - xcode-test@5.1:
        inputs:
        - destination: $DEFAULT_TEST_DEVICE
        - test_repetition_mode: retry_on_failure
        - maximum_test_repetitions: "2"
        - scheme: StripeCardScan
    - xcode-test@5.1:
        inputs:
        - destination: $DEFAULT_TEST_DEVICE
        - test_repetition_mode: retry_on_failure
        - maximum_test_repetitions: "2"
        - scheme: StripeApplePay
    - xcode-test@5.1:
        inputs:
        - destination: $DEFAULT_TEST_DEVICE
        - test_repetition_mode: retry_on_failure
        - maximum_test_repetitions: "2"
        - scheme: StripeUICore
    - deploy-to-bitrise-io@2: {}
    - save-spm-cache@1: {}
  install-tests-cocoapods:
    before_run:
    - prep_all
    steps:
    - fastlane@3:
        title: fastlane installation_cocoapods_without_frameworks_objc
        inputs:
        - lane: installation_cocoapods_without_frameworks_objc
    - fastlane@3:
        title: fastlane installation_cocoapods_frameworks_objc
        inputs:
        - lane: installation_cocoapods_frameworks_objc
    - fastlane@3:
        title: fastlane installation_cocoapods_frameworks_swift
        inputs:
        - lane: installation_cocoapods_frameworks_swift
  install-tests-spm:
    before_run:
    - prep_all
    steps:
    - fastlane@3:
        title: fastlane installation_spm_objc
        inputs:
        - lane: installation_spm_objc
    - fastlane@3:
        title: fastlane installation_spm_swift
        inputs:
        - lane: installation_spm_swift
  integration-all:
    before_run:
    - prep_all
    steps:
    - xcode-test@5.1:
        inputs:
        - destination: $DEFAULT_TEST_DEVICE
        - test_repetition_mode: retry_on_failure
        - maximum_test_repetitions: "2"
        - scheme: IntegrationTester
        - log_formatter: xcbeautify
    - deploy-to-bitrise-io@2: {}
    meta:
      bitrise.io:
        machine_type_id: g2-m1-max.10core
        stack: osx-xcode-15.3.x
  legacy-tests-15:
    before_run:
    - prep_all
    after_run:
    - upload_logs
    - notify_ci
    envs:
    - DEFAULT_TEST_DEVICE: platform=iOS Simulator,name=iPhone 12 mini,OS=15.5
    steps:
    - fastlane@3:
        title: fastlane legacy_tests_15
        inputs:
        - lane: legacy_tests_15
  legacy-tests-16:
    before_run:
    - prep_all
    after_run:
    - upload_logs
    - notify_ci
    envs:
    - DEFAULT_TEST_DEVICE: platform=iOS Simulator,name=iPhone 12 mini,OS=16.4
    steps:
    - fastlane@3:
        title: fastlane legacy_tests_16
        inputs:
        - lane: legacy_tests_16
  extra-builds:
    before_run:
    - prep_all
    steps:
    - script@1:
        title: Check png image format is 8-bit
        inputs:
        - content: ./ci_scripts/check_image_format.sh
    - fastlane@3:
        title: fastlane build_extras
        inputs:
        - lane: build_extras
    - fastlane@3:
        title: fastlane analyze
        inputs:
        - lane: analyze
    - xcode-build-for-test@3.0:
        inputs:
        - scheme: StripePaymentSheet
        - destination: generic/platform=visionOS Simulator
    - deploy-to-bitrise-io@2: {}        
  lokalise-upload:
    before_run:
    - prep_all
    envs:
    - LOKALISE_API_KEY: $LOKALISE_API_KEY
    steps:
    - script@1:
        title: Upload strings to lokalise
        inputs:
        - content: bundle exec ./ci_scripts/upload_localized_strings_to_lokalise.sh
  notify_ci:
    steps:
    - script@1:
        title: Send notification if failed
        is_always_run: true
        run_if: .IsBuildFailed
        inputs:
        - content: ./ci_scripts/notify_ci.rb
  pod-lint-tests:
    before_run:
    - prep_all
    steps:
    - script@1:
        title: pod lib lint
        inputs:
        - content: pod lib lint --include-podspecs='*.podspec'
  prep_all:
    steps:
    - set-env-var@0:
        title: Set CONFIGURATION_BUILD_DIR
        inputs:
        - destination_keys: CONFIGURATION_BUILD_DIR
        - value: $BITRISE_SOURCE_DIR/stpbuild/products
    - set-env-var@0:
        title: Set CONFIGURATION_TEMP_DIR
        inputs:
        - destination_keys: CONFIGURATION_TEMP_DIR
        - value: $BITRISE_SOURCE_DIR/stpbuild/intermediates
    - script@1:
        title: Set Bundler to use local vendor directory
        is_always_run: true
        inputs:
        - content: bundle config set path 'vendor/bundle'
    - git-clone@8.2:
        inputs:
        - clone_depth: "1"
    - restore-cache@2.4:
        inputs:
        - key: bundle-cache-{{ checksum "Gemfile.lock" }}
    - bundler@0: {}
    - save-cache@1:
        inputs:
        - key: bundle-cache-{{ checksum "Gemfile.lock" }}
        - paths: |
            vendor
    - restore-spm-cache@2.1: {}
  prep_build_only:
    steps:
    - set-env-var@0:
        title: Set CONFIGURATION_BUILD_DIR
        inputs:
        - destination_keys: CONFIGURATION_BUILD_DIR
        - value: $BITRISE_SOURCE_DIR/stpbuild/products
    - set-env-var@0:
        title: Set CONFIGURATION_TEMP_DIR
        inputs:
        - destination_keys: CONFIGURATION_TEMP_DIR
        - value: $BITRISE_SOURCE_DIR/stpbuild/intermediates
    - script@1:
        title: Set Bundler to use local vendor directory
        is_always_run: true
        inputs:
        - content: bundle config set path 'vendor/bundle'
    - git-clone@8.2:
        inputs:
        - clone_depth: "1"
    - restore-cache@2.4:
        inputs:
        - key: bundle-cache-{{ checksum "Gemfile.lock" }}
    - bundler@0: {}
    - save-cache@1:
        inputs:
        - key: bundle-cache-{{ checksum "Gemfile.lock" }}
        - paths: |
            vendor
    - restore-spm-cache@2.1: {}
  prep_run_only:
    steps:
    - xcode-start-simulator@0:
        inputs:
        - destination: $DEFAULT_TEST_DEVICE
    - set-env-var@0:
        title: Set CONFIGURATION_BUILD_DIR
        inputs:
        - destination_keys: CONFIGURATION_BUILD_DIR
        - value: $BITRISE_SOURCE_DIR/stpbuild/products
    - set-env-var@0:
        title: Set CONFIGURATION_TEMP_DIR
        inputs:
        - destination_keys: CONFIGURATION_TEMP_DIR
        - value: $BITRISE_SOURCE_DIR/stpbuild/intermediates
    - git-clone@8.2:
        inputs:
        - clone_depth: "1"
    - cache-pull@2: {}
    - restore-spm-cache@2.1: {}
  size-report:
    steps:
    - script@1:
        title: Set Bundler to use local vendor directory
        is_always_run: true
        inputs:
        - content: bundle config set path 'vendor/bundle'
    - git-clone@8.2:
        inputs:
        - merge_pr: "no"
        - fetch_tags: "yes"
    - cache-pull@2: {}
    - bundler@0: {}
    - cache-push@2:
        inputs:
        - compress_archive: "true"
        - cache_paths: |
            vendor
            SourcePackages
    - script@1:
        title: Fetch full branch history
        inputs:
        - content: git fetch origin
    - script@1:
        title: Generate size report
        inputs:
        - content: bundle exec fastlane size_report
  ui-tests-1:
    steps:
    - pull-intermediate-files@1:
        inputs:
        - artifact_sources: stage-main-begin.build-for-testing
    - xcode-test-without-building@0:
        is_always_run: true
        inputs:
        - destination: $DEFAULT_TEST_DEVICE
        - test_repetition_mode: retry_on_failure
        - maximum_test_repetitions: "2"
        - scheme: PaymentSheet Example
        - log_formatter: xcbeautify
        - xcodebuild_options: -maximum-concurrent-test-simulator-destinations 2 -maximum-parallel-testing-workers 2 -parallel-testing-worker-count 2
        - xctestrun: $BITRISE_TEST_BUNDLE_PATH/PaymentSheet Example_PaymentSheet Example-Shard1_iphonesimulator17.4-arm64.xctestrun
    - deploy-to-bitrise-io@2: {}
  ui-tests-2:
    steps:
    - pull-intermediate-files@1:
        inputs:
        - artifact_sources: stage-main-begin.build-for-testing
    - xcode-test-without-building@0:
        is_always_run: true
        inputs:
        - destination: $DEFAULT_TEST_DEVICE
        - test_repetition_mode: retry_on_failure
        - maximum_test_repetitions: "2"
        - scheme: PaymentSheet Example
        - log_formatter: xcbeautify
        - xcodebuild_options: -maximum-concurrent-test-simulator-destinations 2 -maximum-parallel-testing-workers 2 -parallel-testing-worker-count 2
        - xctestrun: $BITRISE_TEST_BUNDLE_PATH/PaymentSheet Example_PaymentSheet Example-Shard2_iphonesimulator17.4-arm64.xctestrun
    - deploy-to-bitrise-io@2: {}
  ui-tests-3:
    steps:
    - pull-intermediate-files@1:
        inputs:
        - artifact_sources: stage-main-begin.build-for-testing
    - xcode-test-without-building@0:
        is_always_run: true
        inputs:
        - destination: $DEFAULT_TEST_DEVICE
        - test_repetition_mode: retry_on_failure
        - maximum_test_repetitions: "2"
        - scheme: PaymentSheet Example
        - log_formatter: xcbeautify
        - xcodebuild_options: -maximum-concurrent-test-simulator-destinations 2 -maximum-parallel-testing-workers 2 -parallel-testing-worker-count 2
        - xctestrun: $BITRISE_TEST_BUNDLE_PATH/PaymentSheet Example_PaymentSheet Example-Shard3_iphonesimulator17.4-arm64.xctestrun
    - deploy-to-bitrise-io@2: {}
  ui-tests-4:
    steps:
    - pull-intermediate-files@1:
        inputs:
        - artifact_sources: stage-main-begin.build-for-testing
    - xcode-test-without-building@0:
        is_always_run: true
        inputs:
        - destination: $DEFAULT_TEST_DEVICE
        - test_repetition_mode: retry_on_failure
        - maximum_test_repetitions: "2"
        - scheme: PaymentSheet Example
        - log_formatter: xcbeautify
        - xctestrun: $BITRISE_TEST_BUNDLE_PATH/PaymentSheet Example_PaymentSheet Example-Shard4_iphonesimulator17.4-arm64.xctestrun
        - xcodebuild_options: -maximum-concurrent-test-simulator-destinations 2 -maximum-parallel-testing-workers 2 -parallel-testing-worker-count 2
    - deploy-to-bitrise-io@2: {}
  upload_logs:
    steps:
    - deploy-to-bitrise-io@2:
        title: Deploy test log artifacts
        inputs:
        - notify_user_groups: none
        - is_compress: "true"
        - deploy_path: build-ci-tests/Logs/Test
        - is_enable_public_page: "false"
